#pragma once

#include <avr/io.h>

/*
 * This file was generated by gen-gpio don't edit it, edit the script in stead
 * 
 * The idea is to contain both the port and the pin in a single defined value so
 * everything can be optimized to constants at compile time just like the traditional
 * PORTA, PINA, DDRA.
 * 
 * These are quivalents:
 * 
 * Set direction:
 * DDRA |= 1<<PA1;         GPOUTPUT(GPA1);
 * DDRA &=~ 1<<PA2;        GPINPUT(GPA2);
 * 
 * Write bit:
 * PORTA |= 1<<PA5;        GPSET(GPA5);
 * PORTA &=~ 1<<PA7;       GPCLEAR(GPA7);
 * GPWRITE(GPA7, onoff)
 *
 * Read bit:
 * PINA & 1<<PA3           GPREAD(GPA3)
 * 
 * 
 * If the GP macros are used with constants, then the code generated is exactly the same as
 * the traditional way of doing things, but it's also possible to use variable,
 * in which case the there will be a slight penalty of a couple of shitfts and an add
 * and a bitwise and for each read or write.
 * 
 * The great advantage of doing this is that configuring a specific GPIO port can be done by defining
 * a single constant rather than the 4 needed (PINx, DDRx, PORTx and pin number) when using
 * the traditional approach.
 * 
 */

// Equivalent to PINA, PINB, etc. so PINA is the same as GPPIN(GPA0)
#define GPPIN(port) (*(volatile uint8_t *)((port) >> 3))

// Equivalent to DDRA, DDRB, etc. so DDRB is the same as GPDDR(GPB7) 
#define GPDDR(port) (*(volatile uint8_t *)(((port) >> 3)+1))

// Equivalent to PORTA, PORTB, etc. so PORTC is the same as GPPORT(GPC3)
#define GPPORT(port) (*(volatile uint8_t *)(((port) >> 3)+2))

// The bit value of the pin part
#define GPBV(port) (1 << ((port) & 7))

// Configure the pin as output DDRA |= _BV(PA0) is the same as GPOUTPUT(GPA0)
#define GPOUTPUT(port) GPDDR(port) |= GPBV(port)

// Configure the pin as input DDRA &=~ _BV(PA0) is the same as GPINPUT(GPA0)
#define GPINPUT(port)  GPDDR(port) &=~ GPBV(port)

// Set the output bit PORTA |= _BV(PA0) is the same as GPSET(GPA0)
#define GPSET(port) GPPORT(port) |= GPBV(port)

// Clear the output bit PORTA &=~ _BV(PA0) is the same as GPCLEAR(GPA0)
#define GPCLEAR(port) GPPORT(port) &=~ GPBV(port)

// Write a bit to either 1 or 0
#define GPWRITE(port, on) if (on) {GPSET(port);} else {GPCLEAR(port);}

// Read an input pin PINA & _BV(PA1) is the same as GPREAD(GPA1)
#define GPREAD(port)  (GPPIN(port) & GPBV(port))


#ifdef PINA
  #ifdef PINA0
    #define GPA0 ((((uint16_t)&PINA) << 3) + 0)
  #endif
  #ifdef PINA1
    #define GPA1 ((((uint16_t)&PINA) << 3) + 1)
  #endif
  #ifdef PINA2
    #define GPA2 ((((uint16_t)&PINA) << 3) + 2)
  #endif
  #ifdef PINA3
    #define GPA3 ((((uint16_t)&PINA) << 3) + 3)
  #endif
  #ifdef PINA4
    #define GPA4 ((((uint16_t)&PINA) << 3) + 4)
  #endif
  #ifdef PINA5
    #define GPA5 ((((uint16_t)&PINA) << 3) + 5)
  #endif
  #ifdef PINA6
    #define GPA6 ((((uint16_t)&PINA) << 3) + 6)
  #endif
  #ifdef PINA7
    #define GPA7 ((((uint16_t)&PINA) << 3) + 7)
  #endif
#endif

#ifdef PINB
  #ifdef PINB0
    #define GPB0 ((((uint16_t)&PINB) << 3) + 0)
  #endif
  #ifdef PINB1
    #define GPB1 ((((uint16_t)&PINB) << 3) + 1)
  #endif
  #ifdef PINB2
    #define GPB2 ((((uint16_t)&PINB) << 3) + 2)
  #endif
  #ifdef PINB3
    #define GPB3 ((((uint16_t)&PINB) << 3) + 3)
  #endif
  #ifdef PINB4
    #define GPB4 ((((uint16_t)&PINB) << 3) + 4)
  #endif
  #ifdef PINB5
    #define GPB5 ((((uint16_t)&PINB) << 3) + 5)
  #endif
  #ifdef PINB6
    #define GPB6 ((((uint16_t)&PINB) << 3) + 6)
  #endif
  #ifdef PINB7
    #define GPB7 ((((uint16_t)&PINB) << 3) + 7)
  #endif
#endif

#ifdef PINC
  #ifdef PINC0
    #define GPC0 ((((uint16_t)&PINC) << 3) + 0)
  #endif
  #ifdef PINC1
    #define GPC1 ((((uint16_t)&PINC) << 3) + 1)
  #endif
  #ifdef PINC2
    #define GPC2 ((((uint16_t)&PINC) << 3) + 2)
  #endif
  #ifdef PINC3
    #define GPC3 ((((uint16_t)&PINC) << 3) + 3)
  #endif
  #ifdef PINC4
    #define GPC4 ((((uint16_t)&PINC) << 3) + 4)
  #endif
  #ifdef PINC5
    #define GPC5 ((((uint16_t)&PINC) << 3) + 5)
  #endif
  #ifdef PINC6
    #define GPC6 ((((uint16_t)&PINC) << 3) + 6)
  #endif
  #ifdef PINC7
    #define GPC7 ((((uint16_t)&PINC) << 3) + 7)
  #endif
#endif

#ifdef PIND
  #ifdef PIND0
    #define GPD0 ((((uint16_t)&PIND) << 3) + 0)
  #endif
  #ifdef PIND1
    #define GPD1 ((((uint16_t)&PIND) << 3) + 1)
  #endif
  #ifdef PIND2
    #define GPD2 ((((uint16_t)&PIND) << 3) + 2)
  #endif
  #ifdef PIND3
    #define GPD3 ((((uint16_t)&PIND) << 3) + 3)
  #endif
  #ifdef PIND4
    #define GPD4 ((((uint16_t)&PIND) << 3) + 4)
  #endif
  #ifdef PIND5
    #define GPD5 ((((uint16_t)&PIND) << 3) + 5)
  #endif
  #ifdef PIND6
    #define GPD6 ((((uint16_t)&PIND) << 3) + 6)
  #endif
  #ifdef PIND7
    #define GPD7 ((((uint16_t)&PIND) << 3) + 7)
  #endif
#endif

#ifdef PINE
  #ifdef PINE0
    #define GPE0 ((((uint16_t)&PINE) << 3) + 0)
  #endif
  #ifdef PINE1
    #define GPE1 ((((uint16_t)&PINE) << 3) + 1)
  #endif
  #ifdef PINE2
    #define GPE2 ((((uint16_t)&PINE) << 3) + 2)
  #endif
  #ifdef PINE3
    #define GPE3 ((((uint16_t)&PINE) << 3) + 3)
  #endif
  #ifdef PINE4
    #define GPE4 ((((uint16_t)&PINE) << 3) + 4)
  #endif
  #ifdef PINE5
    #define GPE5 ((((uint16_t)&PINE) << 3) + 5)
  #endif
  #ifdef PINE6
    #define GPE6 ((((uint16_t)&PINE) << 3) + 6)
  #endif
  #ifdef PINE7
    #define GPE7 ((((uint16_t)&PINE) << 3) + 7)
  #endif
#endif

#ifdef PINF
  #ifdef PINF0
    #define GPF0 ((((uint16_t)&PINF) << 3) + 0)
  #endif
  #ifdef PINF1
    #define GPF1 ((((uint16_t)&PINF) << 3) + 1)
  #endif
  #ifdef PINF2
    #define GPF2 ((((uint16_t)&PINF) << 3) + 2)
  #endif
  #ifdef PINF3
    #define GPF3 ((((uint16_t)&PINF) << 3) + 3)
  #endif
  #ifdef PINF4
    #define GPF4 ((((uint16_t)&PINF) << 3) + 4)
  #endif
  #ifdef PINF5
    #define GPF5 ((((uint16_t)&PINF) << 3) + 5)
  #endif
  #ifdef PINF6
    #define GPF6 ((((uint16_t)&PINF) << 3) + 6)
  #endif
  #ifdef PINF7
    #define GPF7 ((((uint16_t)&PINF) << 3) + 7)
  #endif
#endif

#ifdef PING
  #ifdef PING0
    #define GPG0 ((((uint16_t)&PING) << 3) + 0)
  #endif
  #ifdef PING1
    #define GPG1 ((((uint16_t)&PING) << 3) + 1)
  #endif
  #ifdef PING2
    #define GPG2 ((((uint16_t)&PING) << 3) + 2)
  #endif
  #ifdef PING3
    #define GPG3 ((((uint16_t)&PING) << 3) + 3)
  #endif
  #ifdef PING4
    #define GPG4 ((((uint16_t)&PING) << 3) + 4)
  #endif
  #ifdef PING5
    #define GPG5 ((((uint16_t)&PING) << 3) + 5)
  #endif
  #ifdef PING6
    #define GPG6 ((((uint16_t)&PING) << 3) + 6)
  #endif
  #ifdef PING7
    #define GPG7 ((((uint16_t)&PING) << 3) + 7)
  #endif
#endif

#ifdef PINH
  #ifdef PINH0
    #define GPH0 ((((uint16_t)&PINH) << 3) + 0)
  #endif
  #ifdef PINH1
    #define GPH1 ((((uint16_t)&PINH) << 3) + 1)
  #endif
  #ifdef PINH2
    #define GPH2 ((((uint16_t)&PINH) << 3) + 2)
  #endif
  #ifdef PINH3
    #define GPH3 ((((uint16_t)&PINH) << 3) + 3)
  #endif
  #ifdef PINH4
    #define GPH4 ((((uint16_t)&PINH) << 3) + 4)
  #endif
  #ifdef PINH5
    #define GPH5 ((((uint16_t)&PINH) << 3) + 5)
  #endif
  #ifdef PINH6
    #define GPH6 ((((uint16_t)&PINH) << 3) + 6)
  #endif
  #ifdef PINH7
    #define GPH7 ((((uint16_t)&PINH) << 3) + 7)
  #endif
#endif

#ifdef PINI
  #ifdef PINI0
    #define GPI0 ((((uint16_t)&PINI) << 3) + 0)
  #endif
  #ifdef PINI1
    #define GPI1 ((((uint16_t)&PINI) << 3) + 1)
  #endif
  #ifdef PINI2
    #define GPI2 ((((uint16_t)&PINI) << 3) + 2)
  #endif
  #ifdef PINI3
    #define GPI3 ((((uint16_t)&PINI) << 3) + 3)
  #endif
  #ifdef PINI4
    #define GPI4 ((((uint16_t)&PINI) << 3) + 4)
  #endif
  #ifdef PINI5
    #define GPI5 ((((uint16_t)&PINI) << 3) + 5)
  #endif
  #ifdef PINI6
    #define GPI6 ((((uint16_t)&PINI) << 3) + 6)
  #endif
  #ifdef PINI7
    #define GPI7 ((((uint16_t)&PINI) << 3) + 7)
  #endif
#endif

#ifdef PINJ
  #ifdef PINJ0
    #define GPJ0 ((((uint16_t)&PINJ) << 3) + 0)
  #endif
  #ifdef PINJ1
    #define GPJ1 ((((uint16_t)&PINJ) << 3) + 1)
  #endif
  #ifdef PINJ2
    #define GPJ2 ((((uint16_t)&PINJ) << 3) + 2)
  #endif
  #ifdef PINJ3
    #define GPJ3 ((((uint16_t)&PINJ) << 3) + 3)
  #endif
  #ifdef PINJ4
    #define GPJ4 ((((uint16_t)&PINJ) << 3) + 4)
  #endif
  #ifdef PINJ5
    #define GPJ5 ((((uint16_t)&PINJ) << 3) + 5)
  #endif
  #ifdef PINJ6
    #define GPJ6 ((((uint16_t)&PINJ) << 3) + 6)
  #endif
  #ifdef PINJ7
    #define GPJ7 ((((uint16_t)&PINJ) << 3) + 7)
  #endif
#endif

#ifdef PINK
  #ifdef PINK0
    #define GPK0 ((((uint16_t)&PINK) << 3) + 0)
  #endif
  #ifdef PINK1
    #define GPK1 ((((uint16_t)&PINK) << 3) + 1)
  #endif
  #ifdef PINK2
    #define GPK2 ((((uint16_t)&PINK) << 3) + 2)
  #endif
  #ifdef PINK3
    #define GPK3 ((((uint16_t)&PINK) << 3) + 3)
  #endif
  #ifdef PINK4
    #define GPK4 ((((uint16_t)&PINK) << 3) + 4)
  #endif
  #ifdef PINK5
    #define GPK5 ((((uint16_t)&PINK) << 3) + 5)
  #endif
  #ifdef PINK6
    #define GPK6 ((((uint16_t)&PINK) << 3) + 6)
  #endif
  #ifdef PINK7
    #define GPK7 ((((uint16_t)&PINK) << 3) + 7)
  #endif
#endif

#ifdef PINL
  #ifdef PINL0
    #define GPL0 ((((uint16_t)&PINL) << 3) + 0)
  #endif
  #ifdef PINL1
    #define GPL1 ((((uint16_t)&PINL) << 3) + 1)
  #endif
  #ifdef PINL2
    #define GPL2 ((((uint16_t)&PINL) << 3) + 2)
  #endif
  #ifdef PINL3
    #define GPL3 ((((uint16_t)&PINL) << 3) + 3)
  #endif
  #ifdef PINL4
    #define GPL4 ((((uint16_t)&PINL) << 3) + 4)
  #endif
  #ifdef PINL5
    #define GPL5 ((((uint16_t)&PINL) << 3) + 5)
  #endif
  #ifdef PINL6
    #define GPL6 ((((uint16_t)&PINL) << 3) + 6)
  #endif
  #ifdef PINL7
    #define GPL7 ((((uint16_t)&PINL) << 3) + 7)
  #endif
#endif

#ifdef PINM
  #ifdef PINM0
    #define GPM0 ((((uint16_t)&PINM) << 3) + 0)
  #endif
  #ifdef PINM1
    #define GPM1 ((((uint16_t)&PINM) << 3) + 1)
  #endif
  #ifdef PINM2
    #define GPM2 ((((uint16_t)&PINM) << 3) + 2)
  #endif
  #ifdef PINM3
    #define GPM3 ((((uint16_t)&PINM) << 3) + 3)
  #endif
  #ifdef PINM4
    #define GPM4 ((((uint16_t)&PINM) << 3) + 4)
  #endif
  #ifdef PINM5
    #define GPM5 ((((uint16_t)&PINM) << 3) + 5)
  #endif
  #ifdef PINM6
    #define GPM6 ((((uint16_t)&PINM) << 3) + 6)
  #endif
  #ifdef PINM7
    #define GPM7 ((((uint16_t)&PINM) << 3) + 7)
  #endif
#endif

#ifdef PINN
  #ifdef PINN0
    #define GPN0 ((((uint16_t)&PINN) << 3) + 0)
  #endif
  #ifdef PINN1
    #define GPN1 ((((uint16_t)&PINN) << 3) + 1)
  #endif
  #ifdef PINN2
    #define GPN2 ((((uint16_t)&PINN) << 3) + 2)
  #endif
  #ifdef PINN3
    #define GPN3 ((((uint16_t)&PINN) << 3) + 3)
  #endif
  #ifdef PINN4
    #define GPN4 ((((uint16_t)&PINN) << 3) + 4)
  #endif
  #ifdef PINN5
    #define GPN5 ((((uint16_t)&PINN) << 3) + 5)
  #endif
  #ifdef PINN6
    #define GPN6 ((((uint16_t)&PINN) << 3) + 6)
  #endif
  #ifdef PINN7
    #define GPN7 ((((uint16_t)&PINN) << 3) + 7)
  #endif
#endif

#ifdef PINO
  #ifdef PINO0
    #define GPO0 ((((uint16_t)&PINO) << 3) + 0)
  #endif
  #ifdef PINO1
    #define GPO1 ((((uint16_t)&PINO) << 3) + 1)
  #endif
  #ifdef PINO2
    #define GPO2 ((((uint16_t)&PINO) << 3) + 2)
  #endif
  #ifdef PINO3
    #define GPO3 ((((uint16_t)&PINO) << 3) + 3)
  #endif
  #ifdef PINO4
    #define GPO4 ((((uint16_t)&PINO) << 3) + 4)
  #endif
  #ifdef PINO5
    #define GPO5 ((((uint16_t)&PINO) << 3) + 5)
  #endif
  #ifdef PINO6
    #define GPO6 ((((uint16_t)&PINO) << 3) + 6)
  #endif
  #ifdef PINO7
    #define GPO7 ((((uint16_t)&PINO) << 3) + 7)
  #endif
#endif

#ifdef PINP
  #ifdef PINP0
    #define GPP0 ((((uint16_t)&PINP) << 3) + 0)
  #endif
  #ifdef PINP1
    #define GPP1 ((((uint16_t)&PINP) << 3) + 1)
  #endif
  #ifdef PINP2
    #define GPP2 ((((uint16_t)&PINP) << 3) + 2)
  #endif
  #ifdef PINP3
    #define GPP3 ((((uint16_t)&PINP) << 3) + 3)
  #endif
  #ifdef PINP4
    #define GPP4 ((((uint16_t)&PINP) << 3) + 4)
  #endif
  #ifdef PINP5
    #define GPP5 ((((uint16_t)&PINP) << 3) + 5)
  #endif
  #ifdef PINP6
    #define GPP6 ((((uint16_t)&PINP) << 3) + 6)
  #endif
  #ifdef PINP7
    #define GPP7 ((((uint16_t)&PINP) << 3) + 7)
  #endif
#endif

#ifdef PINQ
  #ifdef PINQ0
    #define GPQ0 ((((uint16_t)&PINQ) << 3) + 0)
  #endif
  #ifdef PINQ1
    #define GPQ1 ((((uint16_t)&PINQ) << 3) + 1)
  #endif
  #ifdef PINQ2
    #define GPQ2 ((((uint16_t)&PINQ) << 3) + 2)
  #endif
  #ifdef PINQ3
    #define GPQ3 ((((uint16_t)&PINQ) << 3) + 3)
  #endif
  #ifdef PINQ4
    #define GPQ4 ((((uint16_t)&PINQ) << 3) + 4)
  #endif
  #ifdef PINQ5
    #define GPQ5 ((((uint16_t)&PINQ) << 3) + 5)
  #endif
  #ifdef PINQ6
    #define GPQ6 ((((uint16_t)&PINQ) << 3) + 6)
  #endif
  #ifdef PINQ7
    #define GPQ7 ((((uint16_t)&PINQ) << 3) + 7)
  #endif
#endif

#ifdef PINR
  #ifdef PINR0
    #define GPR0 ((((uint16_t)&PINR) << 3) + 0)
  #endif
  #ifdef PINR1
    #define GPR1 ((((uint16_t)&PINR) << 3) + 1)
  #endif
  #ifdef PINR2
    #define GPR2 ((((uint16_t)&PINR) << 3) + 2)
  #endif
  #ifdef PINR3
    #define GPR3 ((((uint16_t)&PINR) << 3) + 3)
  #endif
  #ifdef PINR4
    #define GPR4 ((((uint16_t)&PINR) << 3) + 4)
  #endif
  #ifdef PINR5
    #define GPR5 ((((uint16_t)&PINR) << 3) + 5)
  #endif
  #ifdef PINR6
    #define GPR6 ((((uint16_t)&PINR) << 3) + 6)
  #endif
  #ifdef PINR7
    #define GPR7 ((((uint16_t)&PINR) << 3) + 7)
  #endif
#endif

#ifdef PINS
  #ifdef PINS0
    #define GPS0 ((((uint16_t)&PINS) << 3) + 0)
  #endif
  #ifdef PINS1
    #define GPS1 ((((uint16_t)&PINS) << 3) + 1)
  #endif
  #ifdef PINS2
    #define GPS2 ((((uint16_t)&PINS) << 3) + 2)
  #endif
  #ifdef PINS3
    #define GPS3 ((((uint16_t)&PINS) << 3) + 3)
  #endif
  #ifdef PINS4
    #define GPS4 ((((uint16_t)&PINS) << 3) + 4)
  #endif
  #ifdef PINS5
    #define GPS5 ((((uint16_t)&PINS) << 3) + 5)
  #endif
  #ifdef PINS6
    #define GPS6 ((((uint16_t)&PINS) << 3) + 6)
  #endif
  #ifdef PINS7
    #define GPS7 ((((uint16_t)&PINS) << 3) + 7)
  #endif
#endif

#ifdef PINT
  #ifdef PINT0
    #define GPT0 ((((uint16_t)&PINT) << 3) + 0)
  #endif
  #ifdef PINT1
    #define GPT1 ((((uint16_t)&PINT) << 3) + 1)
  #endif
  #ifdef PINT2
    #define GPT2 ((((uint16_t)&PINT) << 3) + 2)
  #endif
  #ifdef PINT3
    #define GPT3 ((((uint16_t)&PINT) << 3) + 3)
  #endif
  #ifdef PINT4
    #define GPT4 ((((uint16_t)&PINT) << 3) + 4)
  #endif
  #ifdef PINT5
    #define GPT5 ((((uint16_t)&PINT) << 3) + 5)
  #endif
  #ifdef PINT6
    #define GPT6 ((((uint16_t)&PINT) << 3) + 6)
  #endif
  #ifdef PINT7
    #define GPT7 ((((uint16_t)&PINT) << 3) + 7)
  #endif
#endif

#ifdef PINU
  #ifdef PINU0
    #define GPU0 ((((uint16_t)&PINU) << 3) + 0)
  #endif
  #ifdef PINU1
    #define GPU1 ((((uint16_t)&PINU) << 3) + 1)
  #endif
  #ifdef PINU2
    #define GPU2 ((((uint16_t)&PINU) << 3) + 2)
  #endif
  #ifdef PINU3
    #define GPU3 ((((uint16_t)&PINU) << 3) + 3)
  #endif
  #ifdef PINU4
    #define GPU4 ((((uint16_t)&PINU) << 3) + 4)
  #endif
  #ifdef PINU5
    #define GPU5 ((((uint16_t)&PINU) << 3) + 5)
  #endif
  #ifdef PINU6
    #define GPU6 ((((uint16_t)&PINU) << 3) + 6)
  #endif
  #ifdef PINU7
    #define GPU7 ((((uint16_t)&PINU) << 3) + 7)
  #endif
#endif

#ifdef PINV
  #ifdef PINV0
    #define GPV0 ((((uint16_t)&PINV) << 3) + 0)
  #endif
  #ifdef PINV1
    #define GPV1 ((((uint16_t)&PINV) << 3) + 1)
  #endif
  #ifdef PINV2
    #define GPV2 ((((uint16_t)&PINV) << 3) + 2)
  #endif
  #ifdef PINV3
    #define GPV3 ((((uint16_t)&PINV) << 3) + 3)
  #endif
  #ifdef PINV4
    #define GPV4 ((((uint16_t)&PINV) << 3) + 4)
  #endif
  #ifdef PINV5
    #define GPV5 ((((uint16_t)&PINV) << 3) + 5)
  #endif
  #ifdef PINV6
    #define GPV6 ((((uint16_t)&PINV) << 3) + 6)
  #endif
  #ifdef PINV7
    #define GPV7 ((((uint16_t)&PINV) << 3) + 7)
  #endif
#endif

#ifdef PINW
  #ifdef PINW0
    #define GPW0 ((((uint16_t)&PINW) << 3) + 0)
  #endif
  #ifdef PINW1
    #define GPW1 ((((uint16_t)&PINW) << 3) + 1)
  #endif
  #ifdef PINW2
    #define GPW2 ((((uint16_t)&PINW) << 3) + 2)
  #endif
  #ifdef PINW3
    #define GPW3 ((((uint16_t)&PINW) << 3) + 3)
  #endif
  #ifdef PINW4
    #define GPW4 ((((uint16_t)&PINW) << 3) + 4)
  #endif
  #ifdef PINW5
    #define GPW5 ((((uint16_t)&PINW) << 3) + 5)
  #endif
  #ifdef PINW6
    #define GPW6 ((((uint16_t)&PINW) << 3) + 6)
  #endif
  #ifdef PINW7
    #define GPW7 ((((uint16_t)&PINW) << 3) + 7)
  #endif
#endif

#ifdef PINX
  #ifdef PINX0
    #define GPX0 ((((uint16_t)&PINX) << 3) + 0)
  #endif
  #ifdef PINX1
    #define GPX1 ((((uint16_t)&PINX) << 3) + 1)
  #endif
  #ifdef PINX2
    #define GPX2 ((((uint16_t)&PINX) << 3) + 2)
  #endif
  #ifdef PINX3
    #define GPX3 ((((uint16_t)&PINX) << 3) + 3)
  #endif
  #ifdef PINX4
    #define GPX4 ((((uint16_t)&PINX) << 3) + 4)
  #endif
  #ifdef PINX5
    #define GPX5 ((((uint16_t)&PINX) << 3) + 5)
  #endif
  #ifdef PINX6
    #define GPX6 ((((uint16_t)&PINX) << 3) + 6)
  #endif
  #ifdef PINX7
    #define GPX7 ((((uint16_t)&PINX) << 3) + 7)
  #endif
#endif

#ifdef PINY
  #ifdef PINY0
    #define GPY0 ((((uint16_t)&PINY) << 3) + 0)
  #endif
  #ifdef PINY1
    #define GPY1 ((((uint16_t)&PINY) << 3) + 1)
  #endif
  #ifdef PINY2
    #define GPY2 ((((uint16_t)&PINY) << 3) + 2)
  #endif
  #ifdef PINY3
    #define GPY3 ((((uint16_t)&PINY) << 3) + 3)
  #endif
  #ifdef PINY4
    #define GPY4 ((((uint16_t)&PINY) << 3) + 4)
  #endif
  #ifdef PINY5
    #define GPY5 ((((uint16_t)&PINY) << 3) + 5)
  #endif
  #ifdef PINY6
    #define GPY6 ((((uint16_t)&PINY) << 3) + 6)
  #endif
  #ifdef PINY7
    #define GPY7 ((((uint16_t)&PINY) << 3) + 7)
  #endif
#endif

#ifdef PINZ
  #ifdef PINZ0
    #define GPZ0 ((((uint16_t)&PINZ) << 3) + 0)
  #endif
  #ifdef PINZ1
    #define GPZ1 ((((uint16_t)&PINZ) << 3) + 1)
  #endif
  #ifdef PINZ2
    #define GPZ2 ((((uint16_t)&PINZ) << 3) + 2)
  #endif
  #ifdef PINZ3
    #define GPZ3 ((((uint16_t)&PINZ) << 3) + 3)
  #endif
  #ifdef PINZ4
    #define GPZ4 ((((uint16_t)&PINZ) << 3) + 4)
  #endif
  #ifdef PINZ5
    #define GPZ5 ((((uint16_t)&PINZ) << 3) + 5)
  #endif
  #ifdef PINZ6
    #define GPZ6 ((((uint16_t)&PINZ) << 3) + 6)
  #endif
  #ifdef PINZ7
    #define GPZ7 ((((uint16_t)&PINZ) << 3) + 7)
  #endif
#endif

